apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: op-hello-world
    control-plane: controller-manager
  name: op-hello-world-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: helloworlds.apps.example.com
spec:
  group: apps.example.com
  names:
    kind: HelloWorld
    listKind: HelloWorldList
    plural: helloworlds
    singular: helloworld
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: HelloWorld is the Schema for the helloworlds API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of HelloWorld
            properties:
              message:
                description: Message is the message to be displayed
                type: string
            required:
            - message
            type: object
          status:
            description: status defines the observed state of HelloWorld
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the HelloWorld's state
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              lastUpdateTime:
                description: LastUpdateTime is the last time the status was updated
                format: date-time
                type: string
              message:
                description: Message contains any additional information about the
                  current status
                type: string
              observedGeneration:
                description: ObservedGeneration reflects the generation of the most
                  recently observed HelloWorld spec
                format: int64
                type: integer
              phase:
                description: Phase represents the current phase of the HelloWorld
                  resource
                enum:
                - Pending
                - Running
                - Failed
                - Unknown
                type: string
              podName:
                description: PodName is the name of the pod created for this HelloWorld
                  resource
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: op-hello-world
  name: op-hello-world-controller-manager
  namespace: op-hello-world-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: op-hello-world
  name: op-hello-world-leader-election-role
  namespace: op-hello-world-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: op-hello-world-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps.example.com
  resources:
  - helloworlds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps.example.com
  resources:
  - helloworlds/finalizers
  verbs:
  - update
- apiGroups:
  - apps.example.com
  resources:
  - helloworlds/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: op-hello-world
  name: op-hello-world-leader-election-rolebinding
  namespace: op-hello-world-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: op-hello-world-leader-election-role
subjects:
- kind: ServiceAccount
  name: op-hello-world-controller-manager
  namespace: op-hello-world-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: op-hello-world
  name: op-hello-world-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: op-hello-world-manager-role
subjects:
- kind: ServiceAccount
  name: op-hello-world-controller-manager
  namespace: op-hello-world-system
---
apiVersion: v1
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJnaGNyLmlvIjogewoJCQkiYXV0aCI6ICJhamR0TkRwbmFIQmZjMFJOTWxOQlFWbEVZazlVYmtsbGNXVjBZak5tUVVOMWVVTjZXbmN4TTBoaWFUbEsiCgkJfQoJfSwKCSJjcmVkSGVscGVycyI6IHsKCQkiZ2NyLmlvIjogImdjbG91ZCIsCgkJInVzLWNlbnRyYWwxLWRvY2tlci5wa2cuZGV2IjogImdjbG91ZCIKCX0sCgkiY3VycmVudENvbnRleHQiOiAiZGVza3RvcC1saW51eCIsCgkicGx1Z2lucyI6IHsKCQkiLXgtY2xpLWhpbnRzIjogewoJCQkiZW5hYmxlZCI6ICJ0cnVlIgoJCX0KCX0sCgkiZmVhdHVyZXMiOiB7CgkJImhvb2tzIjogInRydWUiCgl9Cn0=
kind: Secret
metadata:
  name: op-hello-world-ghcr-login
  namespace: op-hello-world-system
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: op-hello-world
    control-plane: controller-manager
  name: controller-manager-metrics-service
  namespace: system
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: op-hello-world
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: op-hello-world
    control-plane: controller-manager
  name: op-hello-world-controller-manager
  namespace: op-hello-world-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: op-hello-world
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        pyroscope.io/port: "6060"
        pyroscope.io/scrape: "true"
      labels:
        app.kubernetes.io/name: op-hello-world
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8080 --metrics-secure=false --pprof-bind-address=:6060
        - --leader-elect
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=:8080
        - --metrics-secure=false
        - --pprof-bind-address=:6060
        command:
        - /manager
        env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: lgtm.observability.svc.cluster.local:4317
        - name: OTEL_EXPORTER_OTLP_PROTOCOL
          value: grpc
        - name: OTEL_EXPORTER_OTLP_INSECURE
          value: "true"
        - name: OTEL_SERVICE_NAME
          value: op-hello-world-controller
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: service.name=op-hello-world-controller,service.namespace=op-hello-world-system
        - name: OTEL_TRACES_EXPORTER
          value: otlp
        - name: OTEL_METRICS_EXPORTER
          value: otlp
        - name: OTEL_LOGS_EXPORTER
          value: otlp
        image: ghcr.io/j7m4/op-hello-world:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 6060
          name: pprof
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts: []
      imagePullSecrets:
      - name: op-hello-world-ghcr-login
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: op-hello-world-controller-manager
      terminationGracePeriodSeconds: 10
      volumes: []
---
apiVersion: apps.example.com/v1
kind: HelloWorld
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: op-hello-world
  name: op-hello-world-helloworld-sample
  namespace: op-hello-world-system
spec:
  message: Hello from HelloWorld operator!
